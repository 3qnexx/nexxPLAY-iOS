// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef NEXXPLAY_SWIFT_H
#define NEXXPLAY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="nexxPlay",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif





@class NSString;
@class UIColor;
@class NSDictionary;

SWIFT_CLASS("_TtC8nexxPlay21NexxPLAYConfiguration")
@interface NexxPLAYConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull dataMode;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable titleColor;
@property (nonatomic, strong) UIColor * _Nullable subtitleColor;
@property (nonatomic, strong) UIColor * _Nullable seekbarColor;
@property (nonatomic, copy) NSString * _Nonnull loaderSkin;
@property (nonatomic) NSInteger hidePrevNext;
@property (nonatomic) NSInteger autoPlay;
@property (nonatomic) NSInteger autoNext;
@property (nonatomic, copy) NSString * _Nonnull exitMode;
@property (nonatomic) NSInteger titleMode;
@property (nonatomic) NSInteger menuMode;
@property (nonatomic, copy) NSString * _Nonnull captionMode;
@property (nonatomic) NSInteger watermarkMode;
@property (nonatomic) double delay;
@property (nonatomic) NSInteger startPosition;
@property (nonatomic, copy) NSString * _Nonnull adProvider;
@property (nonatomic, copy) NSString * _Nonnull adType;
@property (nonatomic, copy) NSString * _Nonnull adPrerollURL;
@property (nonatomic, copy) NSString * _Nonnull adMidrollURL;
@property (nonatomic, copy) NSString * _Nonnull adPostrollURL;
@property (nonatomic, copy) NSString * _Nonnull adBannerURL;
@property (nonatomic, copy) NSString * _Nonnull adBumperURL;
@property (nonatomic) NSInteger adMidrollInterval;
@property (nonatomic) NSInteger adBannerInterval;
@property (nonatomic) NSInteger disableAds;
@property (nonatomic) NSInteger disablePrerolls;
@property (nonatomic) NSInteger disableMidrolls;
@property (nonatomic) NSInteger disablePostrolls;
@property (nonatomic) NSInteger disableBanners;
@property (nonatomic) NSInteger enableInteractions;
@property (nonatomic) NSInteger enableScenes;
@property (nonatomic) NSInteger enableSidebar;
@property (nonatomic) NSInteger enableAirPlay;
@property (nonatomic) NSInteger enableFullscreen;
@property (nonatomic) NSInteger enableAutoResume;
@property (nonatomic, copy) NSString * _Nonnull webURLRepresentation;
@property (nonatomic, copy) NSString * _Nonnull streamingFilter;
@property (nonatomic) NSInteger loadCustomAttributes;
@property (nonatomic) NSInteger forcePrevNext;
@property (nonatomic) NSInteger enableSeekingButtons;
@property (nonatomic, copy) NSString * _Nonnull playbackMode;
@property (nonatomic) NSInteger disableErrorExit;
@property (nonatomic, copy) NSString * _Nonnull imageScaleMode;
@property (nonatomic, copy) NSString * _Nonnull audioSkin;
@property (nonatomic, copy) NSString * _Nonnull emitter;
@property (nonatomic, copy) NSString * _Nonnull enableSystemMedia;
@property (nonatomic) NSInteger enableTrickPlay;
@property (nonatomic) NSInteger bumperMode;
@property (nonatomic) NSInteger abTestVersion;
@property (nonatomic) NSInteger useContainerMetadata;
@property (nonatomic) float adVASTTimeout;
@property (nonatomic) double adMediaTimeout;
@property (nonatomic) NSInteger respectAutoPlayDataSaver;
@property (nonatomic, copy) NSString * _Nonnull streamingFilterDataSaver;
@property (nonatomic) NSInteger enableStartScreenTitle;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8nexxPlay19NexxPLAYEnvironment")
@interface NexxPLAYEnvironment : NSObject
@property (nonatomic, copy) NSString * _Nonnull domain;
@property (nonatomic, copy) NSString * _Nonnull sessionID;
@property (nonatomic, copy) NSString * _Nullable language;
@property (nonatomic, copy) NSString * _Nonnull userHash;
@property (nonatomic, copy) NSString * _Nonnull externalUserReference;
@property (nonatomic) NSInteger affiliatePartner;
@property (nonatomic) NSInteger deliveryPartner;
@property (nonatomic, copy) NSString * _Nonnull contextReference;
@property (nonatomic) BOOL useSSL;
@property (nonatomic) BOOL trackingOptOuted;
@property (nonatomic, copy) NSString * _Nonnull consentString;
@property (nonatomic) BOOL alwaysInFullscreen;
@property (nonatomic) BOOL showCloseButtonOnFullscreen;
@property (nonatomic) BOOL hideStatusbarOnFullscreen;
@property (nonatomic) BOOL openPodcastURLsDirectly;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain dictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8nexxPlay21NexxPLAYNotifications")
@interface NexxPLAYNotifications : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Error;)
+ (NSString * _Nonnull)Error SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull StartPlayback;)
+ (NSString * _Nonnull)StartPlayback SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull StartPlay;)
+ (NSString * _Nonnull)StartPlay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Play;)
+ (NSString * _Nonnull)Play SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Pause;)
+ (NSString * _Nonnull)Pause SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Progress25;)
+ (NSString * _Nonnull)Progress25 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Progress50;)
+ (NSString * _Nonnull)Progress50 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Progress75;)
+ (NSString * _Nonnull)Progress75 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Progress95;)
+ (NSString * _Nonnull)Progress95 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Progress100;)
+ (NSString * _Nonnull)Progress100 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EnterFullscreen;)
+ (NSString * _Nonnull)EnterFullscreen SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ExitFullscreen;)
+ (NSString * _Nonnull)ExitFullscreen SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Ended;)
+ (NSString * _Nonnull)Ended SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EndedAll;)
+ (NSString * _Nonnull)EndedAll SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull PlayPos;)
+ (NSString * _Nonnull)PlayPos SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AdStarted;)
+ (NSString * _Nonnull)AdStarted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AdEnded;)
+ (NSString * _Nonnull)AdEnded SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AdError;)
+ (NSString * _Nonnull)AdError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AdCalled;)
+ (NSString * _Nonnull)AdCalled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AdClicked;)
+ (NSString * _Nonnull)AdClicked SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AdResumed;)
+ (NSString * _Nonnull)AdResumed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull PayPreviewEnded;)
+ (NSString * _Nonnull)PayPreviewEnded SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Metadata;)
+ (NSString * _Nonnull)Metadata SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Mute;)
+ (NSString * _Nonnull)Mute SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Unmute;)
+ (NSString * _Nonnull)Unmute SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Second;)
+ (NSString * _Nonnull)Second SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Quarter;)
+ (NSString * _Nonnull)Quarter SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Replay;)
+ (NSString * _Nonnull)Replay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull StartSession;)
+ (NSString * _Nonnull)StartSession SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EnterPIP;)
+ (NSString * _Nonnull)EnterPIP SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ExitPIP;)
+ (NSString * _Nonnull)ExitPIP SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ExitRemote;)
+ (NSString * _Nonnull)ExitRemote SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EnterRemote;)
+ (NSString * _Nonnull)EnterRemote SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull MainInteraction;)
+ (NSString * _Nonnull)MainInteraction SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull DownloadStarted;)
+ (NSString * _Nonnull)DownloadStarted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull DownloadProgress;)
+ (NSString * _Nonnull)DownloadProgress SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull DownloadError;)
+ (NSString * _Nonnull)DownloadError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull DownloadReady;)
+ (NSString * _Nonnull)DownloadReady SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull PodcastURLSelected;)
+ (NSString * _Nonnull)PodcastURLSelected SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ShowHotspot;)
+ (NSString * _Nonnull)ShowHotspot SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull PlayerAdded;)
+ (NSString * _Nonnull)PlayerAdded SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ChangeMedia;)
+ (NSString * _Nonnull)ChangeMedia SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ChangePlayPos;)
+ (NSString * _Nonnull)ChangePlayPos SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ChangeMediaIntent;)
+ (NSString * _Nonnull)ChangeMediaIntent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull ShowOverlay;)
+ (NSString * _Nonnull)ShowOverlay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull HideOverlay;)
+ (NSString * _Nonnull)HideOverlay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull TrickPlay;)
+ (NSString * _Nonnull)TrickPlay SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;
@class UICollectionView;
@class UICollectionViewLayout;
@class NSIndexPath;
@class UICollectionViewCell;

SWIFT_CLASS("_TtC8nexxPlay17NexxPLAYTodayView") SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface NexxPLAYTodayView : UIView <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIViewController;

SWIFT_CLASS("_TtC8nexxPlay12NexxPLAYView")
@interface NexxPLAYView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setEnvironment:(NexxPLAYEnvironment * _Nonnull)environment;
- (void)updateEnvironmentWithUserHash:(NSString * _Nonnull)userHash affiliatePartner:(NSInteger)affiliatePartner deliveryPartner:(NSInteger)deliveryPartner contextReference:(NSString * _Nonnull)contextReference consentString:(NSString * _Nonnull)consentString useSSL:(BOOL)useSSL trackingOptOuted:(BOOL)trackingOptOuted showCloseButtonOnFullscreen:(BOOL)showCloseButtonOnFullscreen hideStatusbarOnFullscreen:(BOOL)hideStatusbarOnFullscreen openPodcastURLsDirectly:(BOOL)openPodcastURLsDirectly googleIMAReferenceViewController:(UIViewController * _Nullable)googleIMAReferenceViewController externalUserReference:(NSString * _Nonnull)externalUserReference;
- (void)startPlayWithStreamType:(NSString * _Nonnull)streamType mediaID:(NSString * _Nonnull)mediaID configuration:(NexxPLAYConfiguration * _Nonnull)configuration;
- (void)startPlayWithGlobalIDWithGlobalID:(NSString * _Nonnull)globalID configuration:(NexxPLAYConfiguration * _Nonnull)configuration;
- (void)startPlayWithRemoteMediaWithStreamType:(NSString * _Nonnull)streamType reference:(NSString * _Nonnull)reference provider:(NSString * _Nonnull)provider configuration:(NexxPLAYConfiguration * _Nonnull)configuration;
- (void)updateConfigurationWithPreUrl:(NSString * _Nonnull)preUrl midUrl:(NSString * _Nonnull)midUrl midInterval:(double)midInterval bannerUrl:(NSString * _Nonnull)bannerUrl bannerInterval:(double)bannerInterval postUrl:(NSString * _Nonnull)postUrl bumperUrl:(NSString * _Nonnull)bumperUrl webURLRepresentation:(NSString * _Nonnull)webURLRepresentation;
- (void)clearCache;
- (void)play;
- (void)pause;
- (void)toggle;
- (void)mute;
- (void)unmute;
- (void)seekTo:(float)time;
- (void)seekBy:(float)time;
- (void)next;
- (void)previous;
- (void)swapToPosition:(NSInteger)position;
- (void)swapToMediaItemWithMediaID:(NSString * _Nonnull)mediaID streamType:(NSString * _Nullable)streamType startPosition:(NSInteger)startPosition delay:(double)delay reason:(NSString * _Nullable)reason showReturnButton:(BOOL)showReturnButton;
- (void)swapToGlobalIDWithGlobalID:(NSString * _Nonnull)globalID startPosition:(NSInteger)startPosition delay:(double)delay reason:(NSString * _Nullable)reason showReturnButton:(BOOL)showReturnButton;
- (void)swapToRemoteMediaWithReference:(NSString * _Nonnull)reference streamType:(NSString * _Nullable)streamType provider:(NSString * _Nonnull)provider delay:(double)delay reason:(NSString * _Nullable)reason showReturnButton:(BOOL)showReturnButton;
- (NSDictionary<NSString *, id> * _Nonnull)getCurrentMedia SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nullable)getCurrentMediaParent SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)getCurrentPlaybackState SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSDictionary<NSString *, id> *> * _Nullable)getCaptionsForLanguage:(NSString * _Nullable)language SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSDictionary<NSString *, id> *> * _Nullable)getAudioTracks SWIFT_WARN_UNUSED_RESULT;
- (float)getCurrentTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isPlaying SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isPlayingAd SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isMuted SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isInPiP SWIFT_WARN_UNUSED_RESULT;
- (void)addObserverForAllNotifications:(id _Nonnull)observer selector:(NSString * _Nonnull)selector;
- (void)removeObserverForAllNotifications:(id _Nonnull)observer;
- (void)checkPayment;
- (void)startDownloadLocalMediaWithMediaID:(NSString * _Nonnull)mediaID streamType:(NSString * _Nonnull)streamType provider:(NSString * _Nullable)provider;
- (NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)listLocalMediaWithStreamType:(NSString * _Nonnull)streamType SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasDownloadOfLocalMediaWithMediaID:(NSString * _Nonnull)mediaID streamType:(NSString * _Nonnull)streamType provider:(NSString * _Nullable)provider SWIFT_WARN_UNUSED_RESULT;
- (void)removeLocalMediaWithMediaID:(NSString * _Nonnull)mediaID streamType:(NSString * _Nonnull)streamType provider:(NSString * _Nullable)provider;
- (void)clearLocalMediaWithStreamType:(NSString * _Nullable)streamType;
- (int64_t)diskSpaceUsedForLocalMedia SWIFT_WARN_UNUSED_RESULT;
@end









#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
